@startuml UMLseq

footer %page% of %lastpage%

participant North order 0
participant East order 10
participant South order 20
participant West order 30
participant Serv order 40

== Connection ==

North -> Serv : requête de connection : C0
Serv -> North : requête acceptée : c0y
|||
East -> Serv : requête de connection : C1
Serv -> North : requête accesptée : c1y
Serv -> East : requête accesptée : c1y
|||
South -> Serv : requête de connection : C2
Serv -> North : requête accesptée : c2y
Serv -> East : requête accesptée : c2y
Serv -> South : requête accesptée : c2y
|||
North -> Serv : requête de connection : C0
Serv -> North : requête refusée : c0n
|||
West -> Serv : requête de connection : C3
Serv -> North : requête accesptée : c3y
Serv -> East : requête accesptée : c3y
Serv -> South : requête accesptée : c3y
Serv -> West : requête accesptée : c3y
|||
hnote over Serv : Generation du terrain
hnote over Serv : Melange des rôles pour la distribution
Serv -> North : distribution du rôle : r<role_id>
Serv -> East : distribution du rôle : r<role_id>
Serv -> South : distribution du rôle : r<role_id>
Serv -> West : distribution du rôle : r<role_id>d
hnote over Serv : changement d'état

newpage

footer %page% of %lastpage%

== Jeu ==

North -> Serv : ouvrir une porte : O0<dir de la porte>
note left
dir est la direction de la porte
Nord:0, Est:1, Sud:2, Ouest:3
endnote
hnote over Serv : ouverture possible
Serv -> North : ouverture acceptée : oy<nouv_salle.x><nouv_salle.y><dir>
Serv -> East : ouverture acceptée : oy<nouv_salle.x><nouv_salle.y><dir>
Serv -> South : ouverture acceptée : oy<nouv_salle.x><nouv_salle.y><dir>
Serv -> West : ouverture acceptée : oy<nouv_salle.x><nouv_salle.y><dir>
note right
nouv_salle est la salle
dont le joueur demande 
l'ouverture
endnote
hnote over Serv : ouverture impossible
Serv -> North : ouverture refusée : on
|||

East -> Serv : lancer une chaussure : L1<dir de la salle>
note left
dir est la direction de la salle
où le joueur lance une chausssure
Nord:0, East:1, South:2, West:3
endnote
hnote over Serv
la salle existe
&&
la salle est ouverte
endnote
Serv -> North : lancé accepté : ly1<salle.x><salle.y><dir>
Serv -> East : lancé accepté : ly1<salle.x><salle.y><dir>
Serv -> South : lancé accepté : ly1<salle.x><salle.y><dir>
Serv -> West : lancé accepté : ly1<salle.x><salle.y><dir>
hnote over Serv
la salle n'existe pas
||
la salle est fermée
endnote
Serv -> East : lancé refusé : ln
note right : c'est un "L" minuscule ;)
|||

South -> Serv : entrer dans une salle : E<dir de la salle>
note left
dir est la direction de la salle
où le joueur souhaite entrer
Nord:0, East:1, South:2, West:3
endnote
hnote over Serv
la salle existe
&&
la salle est ouverte
endnote
Serv -> North : déplacement accepté : ey2<salle.x><salle.y>
Serv -> East : déplacement accepté : ey2<salle.x><salle.y>
Serv -> South : déplacement accepté : ey2<salle.x><salle.y>
Serv -> West : déplacement accepté : ey2<salle.x><salle.y>
|||

South -> Serv : est dans une salle : I2
note left
Indique au serveur que le joueur 2 (South)
est entré dans une salle et lance un test
sur la salle.
endnote
hnote over Serv : check sur la salle
Serv -> North : update données : i2<typde de room><hp update>
Serv -> Earth : update données : i2<typde de room><hp update>
Serv -> South : update données : i2<typde de room><hp update>
Serv -> West : update données : i2<typde de room><hp update>


@enduml